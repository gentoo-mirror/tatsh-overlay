From 7554ec1a3a0c058c6c2f7463354928290f237c0c Mon Sep 17 00:00:00 2001
From: Andrew Udvare <audvare@gmail.com>
Date: Sun, 15 Sep 2024 21:49:24 -0400
Subject: [PATCH] System library changes

---
 CMakeLists.txt                                | 15 +++++++++++++
 externals/CMakeLists.txt                      | 22 ++++++++++---------
 src/audio_core/CMakeLists.txt                 |  2 +-
 src/common/CMakeLists.txt                     | 13 ++++++-----
 src/common/logging/backend.cpp                |  3 +--
 .../renderer_vulkan/vk_shader_util.cpp        |  2 +-
 6 files changed, 37 insertions(+), 20 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5dbf63c5b..234ecb7bf 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -87,6 +87,21 @@ option(ENABLE_LTO "Enable link time optimization" ${DEFAULT_ENABLE_LTO})
 option(LIME3DS_USE_PRECOMPILED_HEADERS "Use precompiled headers" ON)
 option(LIME3DS_WARNINGS_AS_ERRORS "Enable warnings as errors" ON)
 
+option(USE_SYSTEM_BOOST "Use the system Boost libs (instead of the bundled ones)" OFF)
+option(USE_SYSTEM_CUBEB "Use system cubeb libs" OFF)
+option(USE_SYSTEM_ENET "Use system enet libs" OFF)
+option(USE_SYSTEM_FMT "Use system fmt libs" OFF)
+option(USE_SYSTEM_INIH "Use system inih" OFF)
+option(USE_SYSTEM_TEAKRA "Use system Teakra libs" OFF)
+option(USE_SYSTEM_XBYAK "Use system xbyak" OFF)
+option(USE_SYSTEM_ZSTD "Use system zstd libs" OFF)
+option(DISABLE_SUBMODULE_CHECK "Disable check for submodules" OFF)
+
+
+CMAKE_DEPENDENT_OPTION(CITRA_USE_BUNDLED_MOLTENVK "Download the bundled MoltenVK" ON "APPLE" OFF)
+
+CMAKE_DEPENDENT_OPTION(CITRA_BUNDLE_LIBRARIES "Bundle dependent libraries with the output executables" ON "APPLE" OFF)
+
 include(Lime3DSHandleSystemLibs)
 
 if (LIME3DS_USE_PRECOMPILED_HEADERS)
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index eb7279724..b13e5e418 100644
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -54,8 +54,6 @@ target_link_libraries(catch2 INTERFACE Catch2::Catch2WithMain)
 # Crypto++
 if(USE_SYSTEM_CRYPTOPP)
     find_package(cryptopp REQUIRED)
-    add_library(cryptopp INTERFACE)
-    target_link_libraries(cryptopp INTERFACE cryptopp::cryptopp)
 else()
     if (WIN32 AND NOT MSVC AND "arm64" IN_LIST ARCHITECTURE)
         # TODO: CryptoPP ARM64 ASM does not seem to support Windows unless compiled with MSVC.
@@ -151,7 +149,12 @@ endif()
 add_subdirectory(open_source_archives)
 
 # faad2
-add_subdirectory(faad2 EXCLUDE_FROM_ALL)
+if(USE_SYSTEM_FAAD2)
+    include(FindPkgConfig)
+    pkg_check_modules(PC_FAAD2 faad2 REQUIRED IMPORTED_TARGET GLOBAL)
+else()
+    add_subdirectory(faad2 EXCLUDE_FROM_ALL)
+endif()
 
 # Dynamic library headers
 add_library(library-headers INTERFACE)
@@ -181,7 +184,11 @@ if(NOT USE_SYSTEM_SOUNDTOUCH)
 endif()
 
 # Teakra
-add_subdirectory(teakra EXCLUDE_FROM_ALL)
+if (NOT USE_SYSTEM_TEAKRA)
+    add_subdirectory(teakra EXCLUDE_FROM_ALL)
+else()
+    find_library(TEAKRA_LIBS teakra REQUIRED)
+endif()
 
 # SDL2
 if (ENABLE_SDL2 AND NOT USE_SYSTEM_SDL2)
@@ -200,12 +207,7 @@ endif()
 
 # Zstandard
 if(USE_SYSTEM_ZSTD)
-    find_package(zstd REQUIRED)
-    add_library(zstd INTERFACE)
-    if(TARGET zstd::libzstd_shared)
-        message(STATUS "Found system Zstandard")
-    endif()
-    target_link_libraries(zstd INTERFACE zstd::libzstd_shared)
+    find_library(ZSTD_LIBS zstd REQUIRED)
 else()
     set(ZSTD_LEGACY_SUPPORT OFF)
     set(ZSTD_BUILD_PROGRAMS OFF)
diff --git a/src/audio_core/CMakeLists.txt b/src/audio_core/CMakeLists.txt
index 14a63c076..6779db668 100644
--- a/src/audio_core/CMakeLists.txt
+++ b/src/audio_core/CMakeLists.txt
@@ -44,7 +44,7 @@ add_library(audio_core STATIC
 create_target_directory_groups(audio_core)
 
 target_link_libraries(audio_core PUBLIC lime_common lime_core)
-target_link_libraries(audio_core PRIVATE faad2 SoundTouch teakra)
+target_link_libraries(audio_core PRIVATE faad SoundTouch teakra)
 
 if(ENABLE_SDL2)
     target_link_libraries(audio_core PRIVATE SDL2::SDL2)
diff --git a/src/common/CMakeLists.txt b/src/common/CMakeLists.txt
index 072832aec..fb2297e97 100644
--- a/src/common/CMakeLists.txt
+++ b/src/common/CMakeLists.txt
@@ -181,11 +181,14 @@ else()
     $<$<CXX_COMPILER_ID:Clang>:-fsized-deallocation>
   )
 endif()
-
 create_target_directory_groups(lime_common)
 
 target_link_libraries(lime_common PUBLIC fmt library-headers microprofile Boost::boost Boost::serialization Boost::iostreams)
-target_link_libraries(lime_common PRIVATE zstd)
+if (NOT USE_SYSTEM_ZSTD)
+    target_link_libraries(lime_common PRIVATE libzstd_static)
+else()
+    target_link_libraries(lime_common PUBLIC zstd)
+endif()
 
 if ("x86_64" IN_LIST ARCHITECTURE)
     target_link_libraries(lime_common PRIVATE xbyak)
@@ -199,8 +202,6 @@ if (LIME3DS_USE_PRECOMPILED_HEADERS)
     target_precompile_headers(lime_common PRIVATE precompiled_headers.h)
 endif()
 
-find_library(BACKTRACE_LIBRARY backtrace)
-if (BACKTRACE_LIBRARY AND ${CMAKE_SYSTEM_NAME} STREQUAL "Linux" AND CMAKE_CXX_COMPILER_ID STREQUAL GNU)
-    target_link_libraries(lime_common PRIVATE ${BACKTRACE_LIBRARY} dl)
-    target_compile_definitions(lime_common PRIVATE LIME3DS_LINUX_GCC_BACKTRACE)
+if (${CMAKE_SYSTEM_NAME} STREQUAL "Linux" AND CMAKE_CXX_COMPILER_ID STREQUAL GNU)
+  target_link_libraries(lime_common PRIVATE dl)
 endif()
diff --git a/src/common/logging/backend.cpp b/src/common/logging/backend.cpp
index 27bf0a9ff..923f89c04 100644
--- a/src/common/logging/backend.cpp
+++ b/src/common/logging/backend.cpp
@@ -14,8 +14,7 @@
 #endif
 
 #include <boost/algorithm/string/replace.hpp>
-#ifdef LIME3DS_LINUX_GCC_BACKTRACE
-#define BOOST_STACKTRACE_USE_BACKTRACE
+#if defined(__linux__) && defined(__GNUG__) && !defined(__clang__)
 #include <boost/stacktrace.hpp>
 #undef BOOST_STACKTRACE_USE_BACKTRACE
 #include <signal.h>
diff --git a/src/video_core/renderer_vulkan/vk_shader_util.cpp b/src/video_core/renderer_vulkan/vk_shader_util.cpp
index 00b08043d..eedaf7d43 100644
--- a/src/video_core/renderer_vulkan/vk_shader_util.cpp
+++ b/src/video_core/renderer_vulkan/vk_shader_util.cpp
@@ -3,7 +3,7 @@
 // Refer to the license.txt file included.
 
 #include <memory>
-#include <SPIRV/GlslangToSpv.h>
+#include <glslang/SPIRV/GlslangToSpv.h>
 #include <glslang/Include/ResourceLimits.h>
 #include <glslang/Public/ShaderLang.h>
 #include "common/assert.h"
-- 
2.46.0


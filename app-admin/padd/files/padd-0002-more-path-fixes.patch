From 5621c7478be81c073198204b33ec00f0e00b0587 Mon Sep 17 00:00:00 2001
From: Andrew Udvare <audvare@gmail.com>
Date: Thu, 16 Dec 2021 09:38:00 -0500
Subject: [PATCH 2/3] more path fixes

---
 padd.sh | 43 +++++++++++++++++++++++--------------------
 1 file changed, 23 insertions(+), 20 deletions(-)

diff --git a/padd.sh b/padd.sh
index fdfaa74..dfc75a5 100755
--- a/padd.sh
+++ b/padd.sh
@@ -20,6 +20,9 @@ cd "$(dirname "$0")" || {
 
 ############################################ VARIABLES #############################################
 
+pihole_version=${XDG_RUNTIME_DIR:-/tmp}/padd.pihole_version
+padd_pid=${XDG_RUNTIME_DIR:-/tmp}/padd.pid
+
 # VERSION
 padd_version="v3.6.7"
 
@@ -31,7 +34,7 @@ declare -i core_count=1
 core_count=$(cat /sys/devices/system/cpu/kernel_max 2> /dev/null)+1
 
 # Get Config variables
-. /etc/pihole/setupVars.conf
+. /var/lib/pihole/setupVars.conf
 
 # COLORS
 CSI="$(printf '\033')["
@@ -114,7 +117,7 @@ padd_logo_retro_3="${bold_text}${green_text}|   ${red_text}/${yellow_text}-${gre
 
 GetFTLData() {
     local ftl_port LINE
-    ftl_port=$(cat /run/pihole-FTL.port 2> /dev/null)
+    ftl_port=$(cat /run/pihole/FTL.port 2> /dev/null)
     if [[ -n "$ftl_port" ]]; then
         # Open connection to FTL
         exec 3<>"/dev/tcp/127.0.0.1/$ftl_port"
@@ -380,7 +383,7 @@ GetNetworkInformation() {
     # if the DHCP Router variable isn't set
     # Issue 3: https://github.com/jpmck/PADD/issues/3
     if [ -z ${DHCP_ROUTER+x} ]; then
-      DHCP_ROUTER=$(/sbin/ip route | awk '/default/ { printf "%s\t", $3 }')
+      DHCP_ROUTER=$(/bin/ip route | awk '/default/ { printf "%s\t", $3 }')
     fi
 
     dhcp_info=" Router:   ${DHCP_ROUTER}"
@@ -471,10 +474,10 @@ GetPiholeInformation() {
 
 GetVersionInformation() {
   # Check if version status has been saved
-  if [ -e "piHoleVersion" ]; then # the file exists...
+  if [ -e "$pihole_version" ]; then # the file exists...
     # the file exits, use it
-    # shellcheck disable=SC1091
-    source piHoleVersion
+    # shellcheck disable=SC1091 source=/dev/null
+    source "$pihole_version"
 
     # Today is...
     today=$(date +%Y%m%d)
@@ -484,7 +487,7 @@ GetVersionInformation() {
     # shellcheck disable=SC2154
     if [ "${today}" != "${last_check}" ]; then # no, it wasn't today
       # Remove the Pi-hole version file...
-      rm -f piHoleVersion
+      rm -f "$pihole_version"
     fi
 
   else # the file doesn't exist, create it...
@@ -598,7 +601,7 @@ GetVersionInformation() {
     fi
 
     # write it all to the file
-    echo "last_check=${today}" > ./piHoleVersion
+    echo "last_check=${today}" > "$pihole_version"
     {
       echo "core_version=$core_version"
       echo "core_version_latest=$core_version_latest"
@@ -625,7 +628,7 @@ GetVersionInformation() {
       echo "tiny_status_=\"$tiny_status_\""
       echo "full_status_=\"$full_status_\""
       echo "mega_status=\"$mega_status\""
-    } >> ./piHoleVersion
+    } >> "$pihole_version"
 
     # there's a file now
   fi
@@ -644,8 +647,7 @@ CleanEcho() {
 # wrapper - printf
 CleanPrintf() {
 # tput el
-# disabling shellcheck here because we pass formatting instructions within `"${@}"`
-# shellcheck disable=SC2059
+  # shellcheck disable=SC2059
   printf "$@"
 }
 
@@ -1041,6 +1043,7 @@ json_extract() {
     local pair_regex="\"${key}\"[[:space:]]*:[[:space:]]*(${value_regex})"
 
     if [[ ${json} =~ ${pair_regex} ]]; then
+        # shellcheck disable=SC2001
         sed 's/^"\|"$//g' <<< "${BASH_REMATCH[1]}"
     else
         return 1
@@ -1065,12 +1068,12 @@ StartupRoutine(){
     # Get PID of PADD
     pid=$$
     echo -ne " [■·········]  10%\\r"
-    echo ${pid} > ./PADD.pid
+    echo ${pid} > "$padd_pid"
 
     # Check for updates
     echo -ne " [■■········]  20%\\r"
-    if [ -e "piHoleVersion" ]; then
-      rm -f piHoleVersion
+    if [ -e "$pihole_version" ]; then
+      rm -f "$pihole_version"
       echo -ne " [■■■·······]  30%\\r"
     else
       echo -ne " [■■■·······]  30%\\r"
@@ -1100,13 +1103,13 @@ StartupRoutine(){
     # Get PID of PADD
     pid=$$
     echo "- Writing PID (${pid}) to file."
-    echo ${pid} > ./PADD.pid
+    echo ${pid} > "$padd_pid"
 
     # Check for updates
     echo "- Checking for version file."
-    if [ -e "piHoleVersion" ]; then
+    if [ -e "$pihole_version" ]; then
       echo "  - Found and deleted."
-      rm -f piHoleVersion
+      rm -f "$pihole_version"
     else
       echo "  - Not found."
     fi
@@ -1140,13 +1143,13 @@ StartupRoutine(){
     # Get PID of PADD
     pid=$$
     echo "- Writing PID (${pid}) to file..."
-    echo ${pid} > ./PADD.pid
+    echo ${pid} > "$padd_pid"
 
     # Check for updates
     echo "- Checking for PADD version file..."
-    if [ -e "piHoleVersion" ]; then
+    if [ -e "$pihole_version" ]; then
       echo "  - PADD version file found... deleting."
-      rm -f piHoleVersion
+      rm -f "$pihole_version"
     else
       echo "  - PADD version file not found."
     fi
-- 
2.35.1


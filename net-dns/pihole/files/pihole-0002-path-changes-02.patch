diff --git a/advanced/Scripts/webpage.sh b/advanced/Scripts/webpage.sh
index a739d898..afd9fffa 100755
--- a/advanced/Scripts/webpage.sh
+++ b/advanced/Scripts/webpage.sh
@@ -10,23 +10,22 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.

-readonly dnsmasqconfig="/etc/dnsmasq.d/01-pihole.conf"
-readonly dhcpconfig="/etc/dnsmasq.d/02-pihole-dhcp.conf"
-readonly FTLconf="/etc/pihole/pihole-FTL.conf"
+readonly dnsmasqconfig="@EPREFIX@/etc/pihole/dnsmasq.d/01-pihole.conf"
+readonly dhcpconfig="@EPREFIX@/etc/pihole/dnsmasq.d/02-pihole-dhcp.conf"
+readonly FTLconf="@EPREFIX@/etc/pihole/pihole-FTL.conf"
 # 03 -> wildcards
-readonly dhcpstaticconfig="/etc/dnsmasq.d/04-pihole-static-dhcp.conf"
-readonly dnscustomfile="/etc/pihole/custom.list"
-readonly dnscustomcnamefile="/etc/dnsmasq.d/05-pihole-custom-cname.conf"
+readonly dhcpstaticconfig="@EPREFIX@/etc/pihole/dnsmasq.d/04-pihole-static-dhcp.conf"
+readonly dnscustomfile="@EPREFIX@/var/lib/pihole/custom.list"
+readonly dnscustomcnamefile="@EPREFIX@/etc/pihole/dnsmasq.d/05-pihole-custom-cname.conf"

-readonly gravityDBfile="/etc/pihole/gravity.db"
+readonly gravityDBfile="@EPREFIX@/var/lib/gravity.db"

 # Source install script for ${setupVars}, ${PI_HOLE_BIN_DIR} and valid_ip()
-readonly PI_HOLE_FILES_DIR="/etc/.pihole"
+readonly PI_HOLE_FILES_DIR="@EPREFIX@/var/lib/pihole/"
 # shellcheck disable=SC2034  # used in basic-install
 PH_TEST="true"
-source "${PI_HOLE_FILES_DIR}/automated install/basic-install.sh"

-coltable="/opt/pihole/COL_TABLE"
+coltable="@EPREFIX@/usr/@LIBDIR@/pihole/COL_TABLE"
 if [[ -f ${coltable} ]]; then
     source ${coltable}
 fi
diff --git a/advanced/Templates/gravity_copy.sql b/advanced/Templates/gravity_copy.sql
index 4a2a9b22..f5556929 100644
--- a/advanced/Templates/gravity_copy.sql
+++ b/advanced/Templates/gravity_copy.sql
@@ -1,6 +1,6 @@
 .timeout 30000

-ATTACH DATABASE '/etc/pihole/gravity.db' AS OLD;
+ATTACH DATABASE '@EPREFIX@/var/lib/pihole/gravity.db' AS OLD;

 BEGIN TRANSACTION;

diff --git a/advanced/Templates/pihole-FTL.service b/advanced/Templates/pihole-FTL.service
index 865e2cd9..b3b92bd3 100644
--- a/advanced/Templates/pihole-FTL.service
+++ b/advanced/Templates/pihole-FTL.service
@@ -20,22 +20,22 @@ start() {
     echo "pihole-FTL is already running"
   else
     # Touch files to ensure they exist (create if non-existing, preserve if existing)
-    mkdir -pm 0755 /run/pihole
-    touch /run/pihole-FTL.pid /run/pihole-FTL.port /var/log/pihole-FTL.log /var/log/pihole.log /etc/pihole/dhcp.leases
+    mkdir -pm 0755 @EPREFIX@/run/pihole
+    touch @EPREFIX@/run/pihole-FTL.pid @EPREFIX@/run/pihole-FTL.port @EPREFIX@/var/log/pihole-FTL.log @EPREFIX@/var/log/pihole.log @EPREFIX@/var/lib/pihole/dhcp.leases
     # Ensure that permissions are set so that pihole-FTL can edit all necessary files
-    chown pihole:pihole /run/pihole-FTL.pid /run/pihole-FTL.port /var/log/pihole-FTL.log /var/log/pihole.log /etc/pihole/dhcp.leases /run/pihole /etc/pihole
-    chmod 0644 /run/pihole-FTL.pid /run/pihole-FTL.port /var/log/pihole-FTL.log /var/log/pihole.log /etc/pihole/dhcp.leases
+    chown pihole:pihole @EPREFIX@/run/pihole-FTL.pid @EPREFIX@/run/pihole-FTL.port @EPREFIX@/var/log/pihole-FTL.log @EPREFIX@/var/log/pihole.log @EPREFIX@/var/lib/pihole/dhcp.leases @EPREFIX@/run/pihole @EPREFIX@/etc/pihole
+    chmod 0644 @EPREFIX@/run/pihole-FTL.pid @EPREFIX@/run/pihole-FTL.port @EPREFIX@/var/log/pihole-FTL.log @EPREFIX@/var/log/pihole.log @EPREFIX@/var/lib/pihole/dhcp.leases
     # Ensure that permissions are set so that pihole-FTL can edit the files. We ignore errors as the file may not (yet) exist
-    chmod -f 0644 /etc/pihole/macvendor.db
+    chmod -f 0644 @EPREFIX@/var/lib/pihole/macvendor.db
     # Chown database files to the user FTL runs as. We ignore errors as the files may not (yet) exist
-    chown -f pihole:pihole /etc/pihole/pihole-FTL.db /etc/pihole/gravity.db /etc/pihole/macvendor.db
+    chown -f pihole:pihole @EPREFIX@/var/lib/pihole/pihole-FTL.db @EPREFIX@/var/lib/pihole/gravity.db @EPREFIX@/var/lib/pihole/macvendor.db
     # Chown database file permissions so that the pihole group (web interface) can edit the file. We ignore errors as the files may not (yet) exist
-    chmod -f 0664 /etc/pihole/pihole-FTL.db
-    if setcap CAP_NET_BIND_SERVICE,CAP_NET_RAW,CAP_NET_ADMIN,CAP_SYS_NICE,CAP_IPC_LOCK,CAP_CHOWN+eip "/usr/bin/pihole-FTL"; then
-      su -s /bin/sh -c "/usr/bin/pihole-FTL" pihole
+    chmod -f 0664 @EPREFIX@/var/lib/pihole/pihole-FTL.db
+    if setcap CAP_NET_BIND_SERVICE,CAP_NET_RAW,CAP_NET_ADMIN,CAP_SYS_NICE,CAP_IPC_LOCK,CAP_CHOWN+eip "@EPREFIX@/usr/bin/pihole-FTL"; then
+      su -s /bin/sh -c "@EPREFIX@/usr/bin/pihole-FTL" pihole
     else
       echo "Warning: Starting pihole-FTL as root because setting capabilities is not supported on this system"
-      /usr/bin/pihole-FTL
+      @EPREFIX@/usr/bin/pihole-FTL
     fi
     echo
   fi
@@ -66,7 +66,7 @@ stop() {
     echo "Not running"
   fi
   # Cleanup
-  rm -f /run/pihole/FTL.sock /dev/shm/FTL-*
+  rm -f @EPREFIX@/run/pihole/FTL.sock /dev/shm/FTL-*
   echo
 }

diff --git a/advanced/index.php b/advanced/index.php
index d0c5fc5d..666713b8 100644
--- a/advanced/index.php
+++ b/advanced/index.php
@@ -11,11 +11,11 @@ $serverName = htmlspecialchars($_SERVER["SERVER_NAME"]);
 // Remove external ipv6 brackets if any
 $serverName = preg_replace('/^\[(.*)\]$/', '${1}', $serverName);

-if (!is_file("/etc/pihole/setupVars.conf"))
+if (!is_file("@EPREFIX@/var/lib/pihole/setupVars.conf"))
   die("[ERROR] File not found: <code>/etc/pihole/setupVars.conf</code>");

 // Get values from setupVars.conf
-$setupVars = parse_ini_file("/etc/pihole/setupVars.conf");
+$setupVars = parse_ini_file("@EPREFIX@/var/lib/pihole/setupVars.conf");
 $svPasswd = !empty($setupVars["WEBPASSWORD"]);
 $svEmail = (!empty($setupVars["ADMIN_EMAIL"]) && filter_var($setupVars["ADMIN_EMAIL"], FILTER_VALIDATE_EMAIL)) ? $setupVars["ADMIN_EMAIL"] : "";
 unset($setupVars);
@@ -130,11 +130,11 @@ EOT;
 $bpAskAdmin = !empty($svEmail) ? '<a href="mailto:'.$svEmail.'?subject=Site Blocked: '.$serverName.'"></a>' : "<span/>";

 // Get possible non-standard location of FTL's database
-$FTLsettings = parse_ini_file("/etc/pihole/pihole-FTL.conf");
+$FTLsettings = parse_ini_file("@EPREFIX@/etc/pihole/pihole-FTL.conf");
 if (isset($FTLsettings["GRAVITYDB"])) {
     $gravityDBFile = $FTLsettings["GRAVITYDB"];
 } else {
-    $gravityDBFile = "/etc/pihole/gravity.db";
+    $gravityDBFile = "@EPREFIX@/var/lib/pihole/gravity.db";
 }

 // Connect to gravity.db
@@ -240,7 +240,7 @@ $wlOutputClass = (isset($wlInfo) && $wlInfo === "recentwl") ? $wlInfo : "hidden"
 $wlOutput = (isset($wlInfo) && $wlInfo !== "recentwl") ? "<a href='http://$wlInfo'>$wlInfo</a>" : "";

 // Get Pi-hole Core version
-$phVersion = exec("cd /etc/.pihole/ && git describe --long --tags");
+$phVersion = "@PIHOLE_VERSION@";

 // Print $execTime on development branches
 // Testing for - is marginally faster than "git rev-parse --abbrev-ref HEAD"
diff --git a/gravity.sh b/gravity.sh
index dfaf4fea..63290f5e 100755
--- a/gravity.sh
+++ b/gravity.sh
@@ -13,15 +13,16 @@

 export LC_ALL=C

-coltable="/opt/pihole/COL_TABLE"
+basename="pihole"
+coltable="@EPREFIX@/usr/@LIBDIR@/${basename}/COL_TABLE"
 source "${coltable}"
 # shellcheck disable=SC1091
-source "/etc/.pihole/advanced/Scripts/database_migration/gravity-db.sh"
+source "@EPREFIX@/usr/@LIBDIR@/${basename}/database_migration/gravity-db.sh"

 basename="pihole"
-PIHOLE_COMMAND="/usr/local/bin/${basename}"
+PIHOLE_COMMAND="@EPREFIX@/usr/bin/${basename}"

-piholeDir="/etc/${basename}"
+piholeDir="@EPREFIX@/var/lib/${basename}"

 # Legacy (pre v5.0) list file locations
 whitelistFile="${piholeDir}/whitelist.txt"
@@ -30,14 +31,14 @@ regexFile="${piholeDir}/regex.list"
 adListFile="${piholeDir}/adlists.list"

 localList="${piholeDir}/local.list"
-VPNList="/etc/openvpn/ipp.txt"
+VPNList="@EPREFIX@/etc/openvpn/ipp.txt"

-piholeGitDir="/etc/.pihole"
-gravityDBfile_default="${piholeDir}/gravity.db"
+piholeGitDir="@EPREFIX@/usr/@LIBDIR@/pihole"
+gravityDBfile_default="@EPREFIX@/var/lib/pihole/gravity.db"
 # GRAVITYDB may be overwritten by source pihole-FTL.conf below
 GRAVITYDB="${gravityDBfile_default}"
-gravityDBschema="${piholeGitDir}/advanced/Templates/gravity.db.sql"
-gravityDBcopy="${piholeGitDir}/advanced/Templates/gravity_copy.sql"
+gravityDBschema="${piholeGitDir}/Templates/gravity.db.sql"
+gravityDBcopy="${piholeGitDir}/Templates/gravity_copy.sql"

 domainsExtension="domains"

@@ -52,7 +53,7 @@ else
 fi

 # Source pihole-FTL from install script
-pihole_FTL="${piholeDir}/pihole-FTL.conf"
+pihole_FTL="@EPREFIX@/etc/pihole-FTL.conf"
 if [[ -f "${pihole_FTL}" ]]; then
   source "${pihole_FTL}"
 fi
@@ -888,7 +889,7 @@ if [[ "${forceDelete:-}" == true ]]; then
   str="Deleting existing list cache"
   echo -ne "${INFO} ${str}..."

-  rm /etc/pihole/list.* 2> /dev/null || true
+  rm @EPREFIX@/var/lib/pihole/list.* 2> /dev/null || true
   echo -e "${OVER}  ${TICK} ${str}"
 fi

diff --git a/manpages/pihole-FTL.conf.5 b/manpages/pihole-FTL.conf.5
index 42405436..67cb43f5 100644
--- a/manpages/pihole-FTL.conf.5
+++ b/manpages/pihole-FTL.conf.5
@@ -156,44 +156,44 @@ For each setting the option shown first is the default.
     Accepts value between 0.1 (6 sec) and 1440 (1 day)
 .br

-\fBDBFILE=/etc/pihole/pihole-FTL.db\fR
+\fBDBFILE=@EPREFIX@/var/lib/pihole/pihole-FTL.db\fR
 .br
     Specify path and filename of FTL's SQLite long-term database.
 .br
     Setting this to DBFILE= disables the database altogether
 .br

-\fBLOGFILE=/var/log/pihole-FTL.log\fR
+\fBLOGFILE=@EPREFIX@/var/log/pihole-FTL.log\fR
 .br
     The location of FTL's log file.
 .br

-\fBPIDFILE=/run/pihole-FTL.pid\fR
+\fBPIDFILE=@EPREFIX@/run/pihole-FTL.pid\fR
 .br
     The file which contains the PID of FTL's main process.
 .br

-\fBPORTFILE=/run/pihole-FTL.port\fR
+\fBPORTFILE=@EPREFIX@/run/pihole-FTL.port\fR
 .br
     Specify path and filename where the FTL process will write its API port number.
 .br

-\fBSOCKETFILE=/run/pihole/FTL.sock\fR
+\fBSOCKETFILE=@EPREFIX@/run/pihole/FTL.sock\fR
 .br
     The file containing the socket FTL's API is listening on.
 .br

-\fBSETUPVARSFILE=/etc/pihole/setupVars.conf\fR
+\fBSETUPVARSFILE=@EPREFIX@/var/lib/pihole/setupVars.conf\fR
 .br
     The config file of Pi-hole containing, e.g., the current blocking status (do not change).
 .br

-\fBMACVENDORDB=/etc/pihole/macvendor.db\fR
+\fBMACVENDORDB=@EPREFIX@/var/lib/pihole/macvendor.db\fR
 .br
     The database containing MAC -> Vendor information for the network table.
 .br

-\fBGRAVITYDB=/etc/pihole/gravity.db\fR
+\fBGRAVITYDB=@EPREFIX@/var/lib/pihole/gravity.db\fR
 .br
     Specify path and filename of FTL's SQLite3 gravity database. This database contains all domains relevant for Pi-hole's DNS blocking.
 .br
diff --git a/pihole b/pihole
index 31356671..c27d068c 100755
--- a/pihole
+++ b/pihole
@@ -9,16 +9,16 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.

-readonly PI_HOLE_SCRIPT_DIR="/opt/pihole"
+readonly PI_HOLE_SCRIPT_DIR="@EPREFIX@/usr/@LIBDIR@/pihole"

 # setupVars and PI_HOLE_BIN_DIR are not readonly here because in some functions (checkout),
 # they might get set again when the installer is sourced. This causes an
 # error due to modifying a readonly variable.
-setupVars="/etc/pihole/setupVars.conf"
-PI_HOLE_BIN_DIR="/usr/local/bin"
-readonly FTL_PID_FILE="/run/pihole-FTL.pid"
+setupVars="@EPREFIX@/var/lib/pihole/setupVars.conf"
+PI_HOLE_BIN_DIR="@EPREFIX@/usr/bin"
+readonly FTL_PID_FILE="@EPREFIX@/run/pihole/FTL.pid"

-readonly colfile="${PI_HOLE_SCRIPT_DIR}/COL_TABLE"
+readonly colfile="@EPREFIX@/usr/@LIBDIR@/pihole/COL_TABLE"
 source "${colfile}"

 webpageFunc() {
@@ -59,17 +59,6 @@ arpFunc() {
   exit 0
 }

-updatePiholeFunc() {
-  shift
-  "${PI_HOLE_SCRIPT_DIR}"/update.sh "$@"
-  exit 0
-}
-
-reconfigurePiholeFunc() {
-  /etc/.pihole/automated\ install/basic-install.sh --reconfigure
-  exit 0;
-}
-
 updateGravityFunc() {
   "${PI_HOLE_SCRIPT_DIR}"/gravity.sh "$@"
   exit $?
@@ -87,12 +76,6 @@ chronometerFunc() {
   exit 0
 }

-
-uninstallFunc() {
-  "${PI_HOLE_SCRIPT_DIR}"/uninstall.sh
-  exit 0
-}
-
 versionFunc() {
   shift
   "${PI_HOLE_SCRIPT_DIR}"/version.sh "$@"
@@ -151,7 +134,14 @@ restartDNS() {
     fi
   else
     # A full restart has been requested
-    svc="service pihole-FTL restart"
+    if command -v service &>/dev/null; then
+        svc="service pihole-FTL restart"
+    elif command -v systemctl &>/dev/null; then
+        svc="systemctl restart pihole-FTL"
+    else
+        "Cannot restart Pi-hole"
+        return 1
+    fi
     str="Restarting DNS server"
     icon="${TICK}"
   fi
@@ -255,14 +245,14 @@ Example: 'pihole logging on'
 Specify whether the Pi-hole log should be used

 Options:
-  on                  Enable the Pi-hole log at /var/log/pihole.log
-  off                 Disable and flush the Pi-hole log at /var/log/pihole.log
-  off noflush         Disable the Pi-hole log at /var/log/pihole.log"
+  on                  Enable the Pi-hole log at @EPREFIX@/var/log/pihole.log
+  off                 Disable and flush the Pi-hole log at @EPREFIX@/var/log/pihole.log
+  off noflush         Disable the Pi-hole log at @EPREFIX@/var/log/pihole.log"
     exit 0
   elif [[ "${1}" == "off" ]]; then
     # Disable logging
-    sed -i 's/^log-queries/#log-queries/' /etc/dnsmasq.d/01-pihole.conf
-    sed -i 's/^QUERY_LOGGING=true/QUERY_LOGGING=false/' /etc/pihole/setupVars.conf
+    sed -i 's/^log-queries/#log-queries/' @EPREFIX@/etc/pihole/dnsmasq.d/01-pihole.conf
+    sed -i 's/^QUERY_LOGGING=true/QUERY_LOGGING=false/' @EPREFIX@/etc/pihole/setupVars.conf
     if [[ "${2}" != "noflush" ]]; then
       # Flush logs
       "${PI_HOLE_BIN_DIR}"/pihole -f
@@ -271,8 +261,8 @@ Options:
     local str="Logging has been disabled!"
   elif [[ "${1}" == "on" ]]; then
     # Enable logging
-    sed -i 's/^#log-queries/log-queries/' /etc/dnsmasq.d/01-pihole.conf
-    sed -i 's/^QUERY_LOGGING=false/QUERY_LOGGING=true/' /etc/pihole/setupVars.conf
+    sed -i 's/^#log-queries/log-queries/' @EPREFIX@/etc/pihole/dnsmasq.d/01-pihole.conf
+    sed -i 's/^QUERY_LOGGING=false/QUERY_LOGGING=true/' @EPREFIX@/etc/pihole/setupVars.conf
     echo -e "  ${INFO} Enabling logging..."
     local str="Logging has been enabled!"
   else
@@ -330,13 +320,13 @@ statusFunc() {
   fi

   # Determine if Pi-hole's blocking is enabled
-  if grep -q "BLOCKING_ENABLED=false" /etc/pihole/setupVars.conf; then
+  if grep -q "BLOCKING_ENABLED=false" @EPREFIX@/etc/pihole/setupVars.conf; then
     # A config is commented out
     case "${1}" in
       "web") echo 0;;
       *) echo -e "  ${CROSS} Pi-hole blocking is disabled";;
     esac
-  elif grep -q "BLOCKING_ENABLED=true" /etc/pihole/setupVars.conf;  then
+  elif grep -q "BLOCKING_ENABLED=true" @EPREFIX@/etc/pihole/setupVars.conf;  then
     # Configs are set
     case "${1}" in
       "web") echo 1;;
@@ -355,7 +345,7 @@ statusFunc() {

 tailFunc() {
   # Warn user if Pi-hole's logging is disabled
-  local logging_enabled=$(grep -c "^log-queries" /etc/dnsmasq.d/01-pihole.conf)
+  local logging_enabled=$(grep -c "^log-queries" @EPREFIX@/etc/pihole/dnsmasq.d/01-pihole.conf)
   if [[ "${logging_enabled}" == "0" ]]; then
     # No "log-queries" lines are found.
     # Commented out lines (such as "#log-queries") are ignored
@@ -367,7 +357,7 @@ tailFunc() {
   # Color blocklist/blacklist/wildcard entries as red
   # Color A/AAAA/DHCP strings as white
   # Color everything else as gray
-  tail -f /var/log/pihole.log | grep --line-buffered "${1}" | sed -E \
+  tail -f @EPREFIX@/var/log/pihole.log | grep --line-buffered "${1}" | sed -E \
     -e "s,($(date +'%b %d ')| dnsmasq\[[0-9]*\]),,g" \
     -e "s,(.*(blacklisted |gravity blocked ).*),${COL_RED}&${COL_NC}," \
     -e "s,.*(query\\[A|DHCP).*,${COL_NC}&${COL_NC}," \
@@ -375,29 +365,6 @@ tailFunc() {
   exit 0
 }

-piholeCheckoutFunc() {
-  if [[ "$2" == "-h" ]] || [[ "$2" == "--help" ]]; then
-    echo "Usage: pihole checkout [repo] [branch]
-Example: 'pihole checkout master' or 'pihole checkout core dev'
-Switch Pi-hole subsystems to a different GitHub branch
-
-Repositories:
-  core [branch]       Change the branch of Pi-hole's core subsystem
-  web [branch]        Change the branch of Web Interface subsystem
-  ftl [branch]        Change the branch of Pi-hole's FTL subsystem
-
-Branches:
-  master              Update subsystems to the latest stable release
-  dev                 Update subsystems to the latest development release
-  branchname          Update subsystems to the specified branchname"
-    exit 0
-  fi
-
-  source "${PI_HOLE_SCRIPT_DIR}"/piholeCheckout.sh
-  shift
-  checkout "$@"
-}
-
 tricorderFunc() {
   local tricorder_token
   if [[ ! -p "/dev/stdin" ]]; then
@@ -419,11 +386,6 @@ tricorderFunc() {
   exit 0
 }

-updateCheckFunc() {
-  "${PI_HOLE_SCRIPT_DIR}"/updatecheck.sh "$@"
-  exit 0
-}
-
 helpFunc() {
   echo "Usage: pihole [options]
 Example: 'pihole -w -h'
@@ -442,7 +404,6 @@ Debugging Options:
   -d, debug           Start a debugging session
                         Add '-a' to automatically upload the log to tricorder.pi-hole.net
   -f, flush           Flush the Pi-hole log
-  -r, reconfigure     Reconfigure or Repair Pi-hole subsystems
   -t, tail [arg]      View the live output of the Pi-hole log.
                       Add an optional argument to filter the log
                       (regular expressions are supported)
@@ -459,11 +420,8 @@ Options:
                         Add '-h' for more info on logging usage
   -q, query           Query the adlists for a specified domain
                         Add '-h' for more info on query usage
-  -up, updatePihole   Update Pi-hole subsystems
-                        Add '--check-only' to exit script before update is performed.
   -v, version         Show installed versions of Pi-hole, Web Interface & FTL
                         Add '-h' for more info on version usage
-  uninstall           Uninstall Pi-hole from your system
   status              Display the running status of Pi-hole subsystems
   enable              Enable Pi-hole subsystems
   disable             Disable Pi-hole subsystems
@@ -471,8 +429,6 @@ Options:
   restartdns          Full restart Pi-hole subsystems
                         Add 'reload' to update the lists and flush the cache without restarting the DNS server
                         Add 'reload-lists' to only update the lists WITHOUT flushing the cache or restarting the DNS server
-  checkout            Switch Pi-hole subsystems to a different GitHub branch
-                        Add '-h' for more info on checkout usage
   arpflush            Flush information stored in Pi-hole's network tables";
   exit 0
 }
@@ -506,15 +462,12 @@ case "${1}" in
   "--white-wild" | "white-wild"   ) listFunc "$@";;
   "-d" | "debug"                ) debugFunc "$@";;
   "-f" | "flush"                ) flushFunc "$@";;
-  "-up" | "updatePihole"        ) updatePiholeFunc "$@";;
-  "-r"  | "reconfigure"         ) reconfigurePiholeFunc;;
   "-g" | "updateGravity"        ) updateGravityFunc "$@";;
   "-c" | "chronometer"          ) chronometerFunc "$@";;
   "-h" | "help"                 ) helpFunc;;
   "-v" | "version"              ) versionFunc "$@";;
   "-q" | "query"                ) queryFunc "$@";;
   "-l" | "logging"              ) piholeLogging "$@";;
-  "uninstall"                   ) uninstallFunc;;
   "enable"                      ) piholeEnable 1;;
   "disable"                     ) piholeEnable 0 "$2";;
   "status"                      ) statusFunc "$2";;
--
2.34.1


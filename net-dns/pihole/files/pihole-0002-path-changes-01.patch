From cb348e56309d662a32e09c3ba14fe8e2f8409db8 Mon Sep 17 00:00:00 2001
From: Andrew Udvare <audvare@gmail.com>
Date: Wed, 15 Dec 2021 06:31:49 -0500
Subject: [PATCH 2/7] Path changes

---
 advanced/01-pihole.conf                       | 10 +-
 advanced/Scripts/chronometer.sh               | 10 +-
 .../Scripts/database_migration/gravity-db.sh  |  2 +-
 advanced/Scripts/list.sh                      |  6 +-
 advanced/Scripts/pihole-reenable.sh           |  2 +-
 advanced/Scripts/piholeARPTable.sh            |  6 +-
 advanced/Scripts/piholeDebug.sh               | 38 ++++----
 advanced/Scripts/piholeLogFlush.sh            | 36 +++----
 advanced/Scripts/query.sh                     |  6 +-
 advanced/Scripts/setupLCD.sh                  | 18 ++--
 advanced/Scripts/updatecheck.sh               |  2 +-
 advanced/Scripts/version.sh                   | 64 ++-----------
 advanced/Scripts/webpage.sh                   | 19 ++--
 advanced/Templates/gravity_copy.sql           |  2 +-
 advanced/Templates/pihole-FTL.service         | 22 ++---
 advanced/index.php                            | 10 +-
 gravity.sh                                    | 23 ++---
 manpages/pihole-FTL.conf.5                    | 16 ++--
 pihole                                        | 95 +++++--------------
 19 files changed, 146 insertions(+), 241 deletions(-)

diff --git a/advanced/01-pihole.conf b/advanced/01-pihole.conf
index 02bc93bf..4c0a2b22 100644
--- a/advanced/01-pihole.conf
+++ b/advanced/01-pihole.conf
@@ -12,14 +12,14 @@
 # ANY CHANGES MADE TO THIS FILE AFTER INSTALL WILL BE LOST ON THE NEXT UPDATE #
 #                                                                             #
 #        IF YOU WISH TO CHANGE THE UPSTREAM SERVERS, CHANGE THEM IN:          #
-#                      /etc/pihole/setupVars.conf                             #
+#                      @EPREFIX@/var/lib/pihole/setupVars.conf                #
 #                                                                             #
 #        ANY OTHER CHANGES SHOULD BE MADE IN A SEPARATE CONFIG FILE           #
-#                    WITHIN /etc/dnsmasq.d/yourname.conf                      #
+#                    WITHIN @EPREFIX@/etc/pihole/dnsmasq.d/yourname.conf      #
 ###############################################################################
 
-addn-hosts=/etc/pihole/local.list
-addn-hosts=/etc/pihole/custom.list
+addn-hosts==@EPREFIX@/var/lib/pihole/local.list
+addn-hosts==@EPREFIX@/var/lib/pihole/custom.list
 
 domain-needed
 
@@ -37,6 +37,6 @@ interface=@INT@
 cache-size=@CACHE_SIZE@
 
 log-queries
-log-facility=/var/log/pihole.log
+log-facility=@EPREFIX@/var/log/pihole.log
 
 log-async
diff --git a/advanced/Scripts/chronometer.sh b/advanced/Scripts/chronometer.sh
index 312c484f..114c3883 100755
--- a/advanced/Scripts/chronometer.sh
+++ b/advanced/Scripts/chronometer.sh
@@ -14,7 +14,7 @@ LC_NUMERIC=C
 # Retrieve stats from FTL engine
 pihole-FTL() {
     local ftl_port LINE
-    ftl_port=$(cat /run/pihole-FTL.port 2> /dev/null)
+    ftl_port=$(cat @EPREFIX@/run/pihole-FTL.port 2> /dev/null)
     if [[ -n "$ftl_port" ]]; then
         # Open connection to FTL
         exec 3<>"/dev/tcp/127.0.0.1/$ftl_port"
@@ -134,7 +134,7 @@ get_init_stats() {
     }
 
     # Set Color Codes
-    coltable="/opt/pihole/COL_TABLE"
+    coltable="@EPREFIX@/usr/@LIBDIR@/pihole/COL_TABLE"
     if [[ -f "${coltable}" ]]; then
         source ${coltable}
     else
@@ -187,7 +187,7 @@ get_init_stats() {
         esac
         sys_type="Raspberry Pi$sys_model"
     else
-        source "/etc/os-release"
+        source "@EPREFIX@/etc/os-release"
         CODENAME=$(sed 's/[()]//g' <<< "${VERSION/* /}")
         sys_type="${NAME/ */} ${CODENAME^} $VERSION_ID"
     fi
@@ -210,8 +210,8 @@ get_init_stats() {
     fi
 
     # Test existence of setupVars config
-    if [[ -f "/etc/pihole/setupVars.conf" ]]; then
-        setupVars="/etc/pihole/setupVars.conf"
+    if [[ -f "@EPREFIX@/var/lib/pihole/setupVars.conf" ]]; then
+        setupVars="@EPREFIX@/var/lib/pihole/setupVars.conf"
     fi
 }
 
diff --git a/advanced/Scripts/database_migration/gravity-db.sh b/advanced/Scripts/database_migration/gravity-db.sh
index 09dc1727..25db988f 100755
--- a/advanced/Scripts/database_migration/gravity-db.sh
+++ b/advanced/Scripts/database_migration/gravity-db.sh
@@ -10,7 +10,7 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.
 
-readonly scriptPath="/etc/.pihole/advanced/Scripts/database_migration/gravity"
+readonly scriptPath="@EPREFIX@/usr/@LIBDIR@/pihole/database_migration/gravity"
 
 upgrade_gravityDB(){
 	local database piholeDir auditFile version
diff --git a/advanced/Scripts/list.sh b/advanced/Scripts/list.sh
index 8945047e..9148bea8 100755
--- a/advanced/Scripts/list.sh
+++ b/advanced/Scripts/list.sh
@@ -11,8 +11,8 @@
 # Please see LICENSE file for your rights under this license.
 
 # Globals
-piholeDir="/etc/pihole"
-GRAVITYDB="${piholeDir}/gravity.db"
+piholeDir="@EPREFIX@/etc/pihole"
+GRAVITYDB="@EPREFIX@/var/lib/pihole/gravity.db"
 # Source pihole-FTL from install script
 pihole_FTL="${piholeDir}/pihole-FTL.conf"
 if [[ -f "${pihole_FTL}" ]]; then
@@ -37,7 +37,7 @@ declare -i domaincount
 domaincount=0
 reload=false
 
-colfile="/opt/pihole/COL_TABLE"
+colfile="@EPREFIX@/usr/@LIBDIR@/pihole/COL_TABLE"
 source ${colfile}
 
 # IDs are hard-wired to domain interpretation in the gravity database scheme
diff --git a/advanced/Scripts/pihole-reenable.sh b/advanced/Scripts/pihole-reenable.sh
index 93ec3b95..99d8b87a 100755
--- a/advanced/Scripts/pihole-reenable.sh
+++ b/advanced/Scripts/pihole-reenable.sh
@@ -17,7 +17,7 @@
 # This ensures that pihole ends up in the correct state after a sequence of
 # commands suchs as: `pihole disable 30s; pihole enable; pihole disable`
 
-readonly PI_HOLE_BIN_DIR="/usr/local/bin"
+readonly PI_HOLE_BIN_DIR="@EPREFIX@/usr/bin"
 
 sleep "${1}"
 "${PI_HOLE_BIN_DIR}"/pihole enable
diff --git a/advanced/Scripts/piholeARPTable.sh b/advanced/Scripts/piholeARPTable.sh
index 66d05bf9..79be0255 100755
--- a/advanced/Scripts/piholeARPTable.sh
+++ b/advanced/Scripts/piholeARPTable.sh
@@ -10,7 +10,7 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.
 
-coltable="/opt/pihole/COL_TABLE"
+coltable="@EPREFIX@/usr/@LIBDIR@/pihole/COL_TABLE"
 if [[ -f ${coltable} ]]; then
     source ${coltable}
 fi
@@ -20,13 +20,13 @@ fi
 # Constructed to return nothing when
 # a) the setting is not present in the config file, or
 # b) the setting is commented out (e.g. "#DBFILE=...")
-FTLconf="/etc/pihole/pihole-FTL.conf"
+FTLconf="@EPREFIX@/etc/pihole/pihole-FTL.conf"
 if [ -e "$FTLconf" ]; then
     DBFILE="$(sed -n -e 's/^\s*DBFILE\s*=\s*//p' ${FTLconf})"
 fi
 # Test for empty string. Use standard path in this case.
 if [ -z "$DBFILE" ]; then
-    DBFILE="/etc/pihole/pihole-FTL.db"
+    DBFILE="@EPREFIX@/var/lib/pihole/pihole-FTL.db"
 fi
 
 
diff --git a/advanced/Scripts/piholeDebug.sh b/advanced/Scripts/piholeDebug.sh
index 3ac63e80..9dc9a90e 100755
--- a/advanced/Scripts/piholeDebug.sh
+++ b/advanced/Scripts/piholeDebug.sh
@@ -22,8 +22,8 @@ set -o pipefail
 ######## GLOBAL VARS ########
 # These variables would normally be next to the other files
 # but we need them to be first in order to get the colors needed for the script output
-PIHOLE_SCRIPTS_DIRECTORY="/opt/pihole"
-PIHOLE_COLTABLE_FILE="${PIHOLE_SCRIPTS_DIRECTORY}/COL_TABLE"
+PIHOLE_SCRIPTS_DIRECTORY="@EPREFIX@/usr/@LIBDIR@/pihole"
+PIHOLE_COLTABLE_FILE="@EPREFIX@/usr/@LIBDIR@/pihole/COL_TABLE"
 
 # These provide the colors we need for making the log more readable
 if [[ -f ${PIHOLE_COLTABLE_FILE} ]]; then
@@ -59,18 +59,18 @@ FORUMS_URL="${COL_CYAN}https://discourse.pi-hole.net${COL_NC}"
 
 # Directories required by Pi-hole
 # https://discourse.pi-hole.net/t/what-files-does-pi-hole-use/1684
-CORE_GIT_DIRECTORY="/etc/.pihole"
-CRON_D_DIRECTORY="/etc/cron.d"
-DNSMASQ_D_DIRECTORY="/etc/dnsmasq.d"
-PIHOLE_DIRECTORY="/etc/pihole"
-PIHOLE_SCRIPTS_DIRECTORY="/opt/pihole"
-BIN_DIRECTORY="/usr/local/bin"
-RUN_DIRECTORY="/run"
-LOG_DIRECTORY="/var/log"
+CORE_GIT_DIRECTORY="@EPREFIX@/usr/@LIBDIR@/pihole"
+CRON_D_DIRECTORY="@EPREFIX@/etc/cron.d"
+DNSMASQ_D_DIRECTORY="@EPREFIX@/etc/pihole/dnsmasq.d"
+PIHOLE_DIRECTORY="@EPREFIX@/var/lib/pihole"
+PIHOLE_SCRIPTS_DIRECTORY="@EPREFIX@/usr/@LIBDIR@/pihole"
+BIN_DIRECTORY="@EPREFIX@/usr/bin"
+RUN_DIRECTORY="@EPREFIX@/run"
+LOG_DIRECTORY="@EPREFIX@/var/log"
 WEB_SERVER_LOG_DIRECTORY="${LOG_DIRECTORY}/lighttpd"
-WEB_SERVER_CONFIG_DIRECTORY="/etc/lighttpd"
-HTML_DIRECTORY="/var/www/html"
-WEB_GIT_DIRECTORY="${HTML_DIRECTORY}/admin"
+WEB_SERVER_CONFIG_DIRECTORY="@EPREFIX@/etc/lighttpd"
+HTML_DIRECTORY="@EPREFIX@/var/www/localhost/htdocs"
+WEB_GIT_DIRECTORY="${HTML_DIRECTORY}/pihole-admin"
 #BLOCK_PAGE_DIRECTORY="${HTML_DIRECTORY}/pihole"
 SHM_DIRECTORY="/dev/shm"
 ETC="/etc"
@@ -87,7 +87,7 @@ PIHOLE_RAW_BLOCKLIST_FILES="${PIHOLE_DIRECTORY}/list.*"
 PIHOLE_LOCAL_HOSTS_FILE="${PIHOLE_DIRECTORY}/local.list"
 PIHOLE_LOGROTATE_FILE="${PIHOLE_DIRECTORY}/logrotate"
 PIHOLE_SETUP_VARS_FILE="${PIHOLE_DIRECTORY}/setupVars.conf"
-PIHOLE_FTL_CONF_FILE="${PIHOLE_DIRECTORY}/pihole-FTL.conf"
+PIHOLE_FTL_CONF_FILE="@EPREFIX@/etc/pihole/pihole-FTL.conf"
 PIHOLE_CUSTOM_HOSTS_FILE="${PIHOLE_DIRECTORY}/custom.list"
 
 # Read the value of an FTL config key. The value is printed to stdout.
@@ -413,8 +413,8 @@ os_check() {
     local remote_os_domain valid_os valid_version detected_os detected_version cmdResult digReturnCode response
     remote_os_domain=${OS_CHECK_DOMAIN_NAME:-"versions.pi-hole.net"}
 
-    detected_os=$(grep "\bID\b" /etc/os-release | cut -d '=' -f2 | tr -d '"')
-    detected_version=$(grep VERSION_ID /etc/os-release | cut -d '=' -f2 | tr -d '"')
+    detected_os=$(grep "\bID\b" @EPREFIX@/etc/os-release | cut -d '=' -f2 | tr -d '"')
+    detected_version=$(grep VERSION_ID @EPREFIX@/etc/os-release | cut -d '=' -f2 | tr -d '"')
 
     cmdResult="$(dig +short -t txt "${remote_os_domain}" @ns1.pi-hole.net 2>&1; echo $?)"
     #Get the return code of the previous command (last line)
@@ -468,7 +468,7 @@ diagnose_operating_system() {
     echo_current_diagnostic "Operating system"
 
     # If there is a /etc/*release file, it's probably a supported operating system, so we can
-    if ls /etc/*release 1> /dev/null 2>&1; then
+    if ls @EPREFIX@/etc/*release 1> /dev/null 2>&1; then
         # display the attributes to the user from the function made earlier
         os_check
     else
@@ -481,9 +481,9 @@ check_selinux() {
     # SELinux is not supported by the Pi-hole
     echo_current_diagnostic "SELinux"
     # Check if a SELinux configuration file exists
-    if [[ -f /etc/selinux/config ]]; then
+    if [[ -f @EPREFIX@/etc/selinux/config ]]; then
         # If a SELinux configuration file was found, check the default SELinux mode.
-        DEFAULT_SELINUX=$(awk -F= '/^SELINUX=/ {print $2}' /etc/selinux/config)
+        DEFAULT_SELINUX=$(awk -F= '/^SELINUX=/ {print $2}' @EPREFIX@/etc/selinux/config)
         case "${DEFAULT_SELINUX,,}" in
             enforcing)
                 log_write "${CROSS} ${COL_RED}Default SELinux: $DEFAULT_SELINUX${COL_NC}"
diff --git a/advanced/Scripts/piholeLogFlush.sh b/advanced/Scripts/piholeLogFlush.sh
index 5c6a2c68..4f2edebf 100755
--- a/advanced/Scripts/piholeLogFlush.sh
+++ b/advanced/Scripts/piholeLogFlush.sh
@@ -8,58 +8,58 @@
 # This file is copyright under the latest version of the EUPL.
 # Please see LICENSE file for your rights under this license.
 
-colfile="/opt/pihole/COL_TABLE"
+colfile="@EPREFIX@/usr/@LIBDIR@/pihole/COL_TABLE"
 source ${colfile}
 
 # In case we're running at the same time as a system logrotate, use a
 # separate logrotate state file to prevent stepping on each other's
 # toes.
-STATEFILE="/var/lib/logrotate/pihole"
+STATEFILE="@EPREFIX@/var/lib/logrotate/pihole"
 
 # Determine database location
 # Obtain DBFILE=... setting from pihole-FTL.db
 # Constructed to return nothing when
 # a) the setting is not present in the config file, or
 # b) the setting is commented out (e.g. "#DBFILE=...")
-FTLconf="/etc/pihole/pihole-FTL.conf"
+FTLconf="@EPREFIX@/etc/pihole/pihole-FTL.conf"
 if [ -e "$FTLconf" ]; then
     DBFILE="$(sed -n -e 's/^\s*DBFILE\s*=\s*//p' ${FTLconf})"
 fi
 # Test for empty string. Use standard path in this case.
 if [ -z "$DBFILE" ]; then
-    DBFILE="/etc/pihole/pihole-FTL.db"
+    DBFILE="@EPREFIX@/var/lib/pihole/pihole-FTL.db"
 fi
 
 if [[ "$@" != *"quiet"* ]]; then
-    echo -ne "  ${INFO} Flushing /var/log/pihole.log ..."
+    echo -ne "  ${INFO} Flushing @EPREFIX@/var/log/pihole.log ..."
 fi
 if [[ "$@" == *"once"* ]]; then
     # Nightly logrotation
-    if command -v /usr/sbin/logrotate >/dev/null; then
+    if command -v @EPREFIX@/usr/bin/logrotate >/dev/null; then
         # Logrotate once
-        /usr/sbin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate
+        @EPREFIX@/usr/bin/logrotate --force --state "${STATEFILE}" @EPREFIX@/etc/logrotate.d/pihole
     else
         # Copy pihole.log over to pihole.log.1
         # and empty out pihole.log
         # Note that moving the file is not an option, as
         # dnsmasq would happily continue writing into the
         # moved file (it will have the same file handler)
-        cp -p /var/log/pihole.log /var/log/pihole.log.1
-        echo " " > /var/log/pihole.log
-        chmod 644 /var/log/pihole.log
+        cp -p @EPREFIX@/var/log/pihole.log @EPREFIX@/var/log/pihole.log.1
+        echo " " > @EPREFIX@/var/log/pihole.log
+        chmod 644 @EPREFIX@/var/log/pihole.log
     fi
 else
     # Manual flushing
-    if command -v /usr/sbin/logrotate >/dev/null; then
+    if command -v @EPREFIX@/usr/bin/logrotate >/dev/null; then
         # Logrotate twice to move all data out of sight of FTL
-        /usr/sbin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate; sleep 3
-        /usr/sbin/logrotate --force --state "${STATEFILE}" /etc/pihole/logrotate
+        @EPREFIX@/usr/bin/logrotate --force --state "${STATEFILE}" @EPREFIX@/etc/logrotate.d/pihole; sleep 3
+        @EPREFIX@/usr/bin/logrotate --force --state "${STATEFILE}" @EPREFIX@/etc/logrotate.d/pihole
     else
         # Flush both pihole.log and pihole.log.1 (if existing)
-        echo " " > /var/log/pihole.log
-        if [ -f /var/log/pihole.log.1 ]; then
-            echo " " > /var/log/pihole.log.1
-            chmod 644 /var/log/pihole.log.1
+        echo " " > @EPREFIX@/var/log/pihole.log
+        if [ -f @EPREFIX@/var/log/pihole.log.1 ]; then
+            echo " " > @EPREFIX@/var/log/pihole.log.1
+            chmod 644 @EPREFIX@/var/log/pihole.log.1
         fi
     fi
     # Delete most recent 24 hours from FTL's database, leave even older data intact (don't wipe out all history)
@@ -70,6 +70,6 @@ else
 fi
 
 if [[ "$@" != *"quiet"* ]]; then
-    echo -e "${OVER}  ${TICK} Flushed /var/log/pihole.log"
+    echo -e "${OVER}  ${TICK} Flushed @EPREFIX@/var/log/pihole.log"
     echo -e "  ${TICK} Deleted ${deleted} queries from database"
 fi
diff --git a/advanced/Scripts/query.sh b/advanced/Scripts/query.sh
index 0fd9871a..d5b08491 100755
--- a/advanced/Scripts/query.sh
+++ b/advanced/Scripts/query.sh
@@ -11,8 +11,8 @@
 # Please see LICENSE file for your rights under this license.
 
 # Globals
-piholeDir="/etc/pihole"
-GRAVITYDB="${piholeDir}/gravity.db"
+piholeDir="@EPREFIX@/etc/pihole"
+GRAVITYDB="@EPREFIX@/var/lib/pihole/gravity.db"
 options="$*"
 all=""
 exact=""
@@ -28,7 +28,7 @@ fi
 # have changed
 gravityDBfile="${GRAVITYDB}"
 
-colfile="/opt/pihole/COL_TABLE"
+colfile="@EPREFIX@/usr/@LIBDIR@/pihole/COL_TABLE"
 source "${colfile}"
 
 # Scan an array of files for matching strings

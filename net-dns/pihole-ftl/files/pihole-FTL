#!/sbin/openrc-run
PIFTL_CMD="/usr/bin/pihole-FTL"
PIFTL_CONF="${PIFTL_CONF:-/etc/pihole/pihole-FTL.conf}"
PIFTL_PID="/var/run/pihole-FTL.pid"

description="Pi-hole FTL"
name="Pi-hole daemon"
required_files="${PIFTL_CONF}"

depend() {
	need localmount
	use net
}

start_pre() {
	command_user="pihole:pihole"
	# Prepare directories with pihole:pihole permissions:
	checkpath -o "$command_user" -d /run/pihole /var/log/pihole /var/lib/pihole
	# Prepare pid-file with root:root and 0644 permissions and clear of all
	# contents.
	checkpath --file-truncate "$PIFTL_PID"
	# Prepare config and database files to the user FTL runs as.
	checkpath -o "$command_user" -f \
		/var/run/pihole-FTL.port \
		/var/log/pihole-FTL.log \
		/var/log/pihole.log \
		/var/lib/pihole/dhcp.leases \
		/var/lib/pihole/pihole-FTL.db \
		/var/lib/pihole/gravity.db \
		/var/lib/pihole/macvendor.db
	# Prepare database file permissions so that the pihole group (web
	# interface) can edit the file.
	checkpath -m 0664 -f \
		/var/lib/pihole/pihole-FTL.db \
		/var/lib/pihole/gravity.db
}

stop_post() {
	rm -rf /run/pihole* /run/pihole/FTL.sock /dev/shm/FTL-*
}

start() {
	ebegin "Starting $RC_SVCNAME"
	start-stop-daemon --start --exec "$PIFTL_CMD" --pidfile "$PIFTL_PID"
	eend $?
}

stop() {
	ebegin "Stopping $RC_SVCNAME"
	start-stop-daemon --stop --exec "$PIFTL_CMD" --pidfile "$PIFTL_PID"
	eend $?
}

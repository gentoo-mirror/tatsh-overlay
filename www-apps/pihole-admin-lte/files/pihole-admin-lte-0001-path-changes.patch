From 3e91bce00b6b2955cc85c34c9e73ea66a5835f98 Mon Sep 17 00:00:00 2001
From: Andrew Udvare <audvare@gmail.com>
Date: Thu, 13 Jan 2022 12:45:41 -0500
Subject: [PATCH 1/3] Path changes

---
 api_db.php                             |  9 ++---
 dns_records.php                        | 18 +++++-----
 scripts/pi-hole/php/database.php       | 29 ++++++++--------
 scripts/pi-hole/php/func.php           |  4 +--
 scripts/pi-hole/php/password.php       |  2 +-
 scripts/pi-hole/php/savesettings.php   | 46 ++++++++++++++------------
 scripts/pi-hole/php/teleporter.php     | 42 +++++++++++------------
 scripts/pi-hole/php/update_checker.php |  2 +-
 8 files changed, 77 insertions(+), 75 deletions(-)

diff --git a/api_db.php b/api_db.php
index f060d47b..c67db692 100644
--- a/api_db.php
+++ b/api_db.php
@@ -285,10 +285,11 @@ if (isset($_GET['getQueriesCount']) && $auth) {
     $data = array_merge($data, $result);
 }
 
-if (isset($_GET['getDBfilesize']) && $auth) {
-    $filesize = filesize('/etc/pihole/pihole-FTL.db');
-    $result = array('filesize' => $filesize);
-    $data = array_merge($data, $result);
+if (isset($_GET['getDBfilesize']) && $auth)
+{
+	$filesize = filesize("/var/lib/pihole/pihole-FTL.db");
+	$result = array('filesize' => $filesize);
+	$data = array_merge($data, $result);
 }
 
 if (isset($_GET['getGraphData']) && $auth) {
diff --git a/dns_records.php b/dns_records.php
index 25870f4e..e6be0565 100644
--- a/dns_records.php
+++ b/dns_records.php
@@ -41,15 +41,15 @@ require 'scripts/pi-hole/php/header_authenticated.php';
                 </div>
             </div>
             <div class="box-footer clearfix">
-                <strong>Note:</strong>
-                <p>The order of locally defined DNS records is: </p>
-                <ol>
-                    <li>The device's host name and <code>pi.hole</code></li>
-                    <li>Configured in a config file in <code>/etc/dnsmasq.d/</code></li>
-                    <li>Read from <code>/etc/hosts</code></li>
-                    <li>Read from the "Local (custom) DNS" list (stored in <code>/etc/pihole/custom.list</code>)</li>
-                </ol>
-                <p>Only the first record will trigger an address-to-name association.</p>
+              <strong>Note:</strong>
+              <p>The order of locally defined DNS records is: </p>
+              <ol>
+                  <li>The device's host name and <code>pi.hole</code></li>
+                  <li>Configured in a config file in <code>/etc/pihole/dnsmasq.d/</code></li>
+                  <li>Read from <code>/etc/hosts</code></li>
+                  <li>Read from the "Local (custom) DNS" list (stored in <code>/var/lib/pihole/custom.list</code>)</li>
+              </ol>
+              <p>Only the first record will trigger an address-to-name association.</p>
                 <button type="button" id="btnAdd" class="btn btn-primary pull-right">Add</button>
             </div>
         </div>
diff --git a/scripts/pi-hole/php/database.php b/scripts/pi-hole/php/database.php
index f52c6169..502a3067 100644
--- a/scripts/pi-hole/php/database.php
+++ b/scripts/pi-hole/php/database.php
@@ -15,24 +15,23 @@ const LISTTYPE_REGEX_BLACKLIST = 3;
 
 function getGravityDBFilename()
 {
-    // Get possible non-standard location of FTL's database
-    $FTLsettings = parse_ini_file('/etc/pihole/pihole-FTL.conf');
-    if (isset($FTLsettings['GRAVITYDB'])) {
-        return $FTLsettings['GRAVITYDB'];
-    }
-
-    return '/etc/pihole/gravity.db';
-}
+	// Get possible non-standard location of FTL's database
+	$FTLsettings = parse_ini_file("/etc/pihole/pihole-FTL.conf");
+	if(isset($FTLsettings["GRAVITYDB"]))
+	{
+		return $FTLsettings["GRAVITYDB"];
+	}
+	return "/var/lib/pihole/gravity.db";
 
 function getQueriesDBFilename()
 {
-    // Get possible non-standard location of FTL's database
-    $FTLsettings = parse_ini_file('/etc/pihole/pihole-FTL.conf');
-    if (isset($FTLsettings['DBFILE'])) {
-        return $FTLsettings['DBFILE'];
-    }
-
-    return '/etc/pihole/pihole-FTL.db';
+	// Get possible non-standard location of FTL's database
+	$FTLsettings = parse_ini_file("/etc/pihole/pihole-FTL.conf");
+	if(isset($FTLsettings["DBFILE"]))
+	{
+		return $FTLsettings["DBFILE"];
+	}
+	return "/var/lib/pihole/pihole-FTL.db";
 }
 
 function SQLite3_connect_try($filename, $mode, $trytoreconnect)
diff --git a/scripts/pi-hole/php/func.php b/scripts/pi-hole/php/func.php
index a36cdba7..09f35e26 100644
--- a/scripts/pi-hole/php/func.php
+++ b/scripts/pi-hole/php/func.php
@@ -175,7 +175,7 @@ function pihole_execute($argument_string)
 }
 
 // Custom DNS
-$customDNSFile = '/etc/pihole/custom.list';
+$customDNSFile = "/var/lib/pihole/custom.list";
 
 function echoCustomDNSEntries()
 {
@@ -347,7 +347,7 @@ function deleteAllCustomDNSEntries($reload = '')
 }
 
 // CNAME
-$customCNAMEFile = '/etc/dnsmasq.d/05-pihole-custom-cname.conf';
+$customCNAMEFile = "/etc/pihole/dnsmasq.d/05-pihole-custom-cname.conf";
 
 function echoCustomCNAMEEntries()
 {
diff --git a/scripts/pi-hole/php/password.php b/scripts/pi-hole/php/password.php
index 7724cd05..d01ab964 100644
--- a/scripts/pi-hole/php/password.php
+++ b/scripts/pi-hole/php/password.php
@@ -13,7 +13,7 @@ require_once 'func.php';
 start_php_session();
 
 // Read setupVars.conf file
-$setupVars = parse_ini_file('/etc/pihole/setupVars.conf');
+$setupVars = parse_ini_file('/var/lib/pihole/setupVars.conf');
 // Try to read password hash from setupVars.conf
 if (isset($setupVars['WEBPASSWORD'])) {
     $pwhash = $setupVars['WEBPASSWORD'];
diff --git a/scripts/pi-hole/php/savesettings.php b/scripts/pi-hole/php/savesettings.php
index 41f03a64..06dc6a6c 100644
--- a/scripts/pi-hole/php/savesettings.php
+++ b/scripts/pi-hole/php/savesettings.php
@@ -37,7 +37,7 @@ function formatMAC($mac_addr)
 }
 
 $dhcp_static_leases = array();
-function readStaticLeasesFile($origin_file = '/etc/dnsmasq.d/04-pihole-static-dhcp.conf')
+function readStaticLeasesFile($origin_file="/etc/pihole/dnsmasq.d/04-pihole-static-dhcp.conf")
 {
     global $dhcp_static_leases;
     $dhcp_static_leases = array();
@@ -105,27 +105,29 @@ function isinserverlist($addr)
 $DNSserverslist = array();
 function readDNSserversList()
 {
-    // Reset list
-    $list = array();
-    $handle = @fopen('/etc/pihole/dns-servers.conf', 'r');
-    if ($handle) {
-        while (($line = fgets($handle)) !== false) {
-            $line = rtrim($line);
-            $line = explode(';', $line);
-            $name = $line[0];
-            $values = array();
-            if (!empty($line[1]) && validIP($line[1])) {
-                $values['v4_1'] = $line[1];
-            }
-            if (!empty($line[2]) && validIP($line[2])) {
-                $values['v4_2'] = $line[2];
-            }
-            if (!empty($line[3]) && validIP($line[3])) {
-                $values['v6_1'] = $line[3];
-            }
-            if (!empty($line[4]) && validIP($line[4])) {
-                $values['v6_2'] = $line[4];
-            }
+	// Reset list
+	$list = [];
+	$handle = @fopen("/var/lib/pihole/dns-servers.conf", "r");
+	if ($handle)
+	{
+		while (($line = fgets($handle)) !== false)
+		{
+			$line = rtrim($line);
+			$line = explode(';', $line);
+			$name = $line[0];
+			$values = [];
+			if (!empty($line[1]) && validIP($line[1])) {
+				$values["v4_1"] = $line[1];
+			}
+			if (!empty($line[2]) && validIP($line[2])) {
+				$values["v4_2"] = $line[2];
+			}
+			if (!empty($line[3]) && validIP($line[3])) {
+				$values["v6_1"] = $line[3];
+			}
+			if (!empty($line[4]) && validIP($line[4])) {
+				$values["v6_2"] = $line[4];
+			}
             $list[$name] = $values;
         }
         fclose($handle);
diff --git a/scripts/pi-hole/php/teleporter.php b/scripts/pi-hole/php/teleporter.php
index 0161a9ad..ecf02e73 100644
--- a/scripts/pi-hole/php/teleporter.php
+++ b/scripts/pi-hole/php/teleporter.php
@@ -464,23 +464,23 @@ if (isset($_POST['action'])) {
                 $importedsomething = true;
             }
 
-            if (isset($_POST['staticdhcpleases']) && $file->getFilename() === '04-pihole-static-dhcp.conf') {
-                if ($flushtables) {
-                    $local_file = @fopen('/etc/dnsmasq.d/04-pihole-static-dhcp.conf', 'r+');
-                    if ($local_file !== false) {
-                        ftruncate($local_file, 0);
-                        fclose($local_file);
-                    }
-                }
-                $num = 0;
-                $staticdhcpleases = process_file(file_get_contents($file));
-                foreach ($staticdhcpleases as $lease) {
-                    list($mac, $ip, $hostname) = explode(',', $lease);
-                    $mac = formatMAC($mac);
-                    if (addStaticDHCPLease($mac, $ip, $hostname)) {
-                        ++$num;
-                    }
-                }
+			if(isset($_POST["staticdhcpleases"]) && $file->getFilename() === "04-pihole-static-dhcp.conf")
+			{
+				if($flushtables) {
+					$local_file = @fopen("/etc/pihole/dnsmasq.d/04-pihole-static-dhcp.conf", "r+");
+					if ($local_file !== false) {
+						ftruncate($local_file, 0);
+						fclose($local_file);
+					}
+				}
+				$num = 0;
+				$staticdhcpleases = process_file(file_get_contents($file));
+				foreach($staticdhcpleases as $lease) {
+					list($mac,$ip,$hostname) = explode(",",$lease);
+					$mac = formatMAC($mac);
+					if(addStaticDHCPLease($mac,$ip,$hostname))
+						$num++;
+				}
 
                 readStaticLeasesFile();
                 echo 'Processed static DHCP leases ('.$num.noun($num).")<br>\n";
@@ -592,12 +592,12 @@ if (isset($_POST['action'])) {
     archive_add_table('adlist_by_group.json', 'adlist_by_group');
     archive_add_table('client_by_group.json', 'client_by_group');
 
-    archive_add_file('/etc/pihole/', 'setupVars.conf');
-    archive_add_file('/etc/pihole/', 'dhcp.leases');
-    archive_add_file('/etc/pihole/', 'custom.list');
+    archive_add_file('/var/lib/pihole/', 'setupVars.conf');
+    archive_add_file('/var/lib/pihole/', 'dhcp.leases');
+    archive_add_file('/var/lib/pihole/', 'custom.list');
     archive_add_file('/etc/pihole/', 'pihole-FTL.conf');
     archive_add_file('/etc/', 'hosts', 'etc/');
-    archive_add_directory('/etc/dnsmasq.d/', 'dnsmasq.d/');
+    archive_add_directory('/etc/pihole/', 'dnsmasq.d/');
 
     $archive->compress(Phar::GZ); // Creates a gzipped copy
     unlink($archive_file_name); // Unlink original tar file as it is not needed anymore
diff --git a/scripts/pi-hole/php/update_checker.php b/scripts/pi-hole/php/update_checker.php
index 00f7b349..15e71832 100644
--- a/scripts/pi-hole/php/update_checker.php
+++ b/scripts/pi-hole/php/update_checker.php
@@ -11,7 +11,7 @@ function checkUpdate($currentVersion, $latestVersion)
     }
 }
 
-$versionsfile = '/etc/pihole/versions';
+$versionsfile = '/var/lib/pihole/versions';
 
 if (!is_readable($versionsfile)) {
     $core_branch = 'master';
-- 
2.39.1


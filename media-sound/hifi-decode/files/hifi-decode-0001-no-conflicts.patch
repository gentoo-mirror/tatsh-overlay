From 8641ee96aad852743740cad0aa43d610feb0df3b Mon Sep 17 00:00:00 2001
From: Andrew Udvare <audvare@gmail.com>
Date: Tue, 4 Oct 2022 21:18:49 -0400
Subject: [PATCH] No conflicts

---
 hifi-decode                        |  6 +++---
 setup.py                           | 17 +++--------------
 vhsdecode/addons/chromaAFC.py      |  2 +-
 vhsdecode/addons/chromasep.py      |  2 +-
 vhsdecode/addons/resync.py         |  6 +++---
 vhsdecode/addons/vsyncserration.py |  2 +-
 vhsdecode/chroma.py                |  4 ++--
 vhsdecode/debug_plot.py            |  2 +-
 vhsdecode/demod.py                 |  2 +-
 vhsdecode/doc.py                   |  2 +-
 vhsdecode/field.py                 | 10 +++++-----
 vhsdecode/formats.py               | 24 ++++++++++++------------
 vhsdecode/hifi/HiFiDecode.py       |  8 ++++----
 vhsdecode/main.py                  |  8 ++++----
 vhsdecode/process.py               | 26 +++++++++++++-------------
 15 files changed, 55 insertions(+), 66 deletions(-)

diff --git a/hifi-decode b/hifi-decode
index fcf76666..7577ff04 100755
--- a/hifi-decode
+++ b/hifi-decode
@@ -4,14 +4,14 @@ from multiprocessing import cpu_count
 from datetime import datetime
 import soundfile as sf
 
-from vhsdecode.cmdcommons import (
+from hifidecode.cmdcommons import (
     common_parser_cli,
     select_sample_freq,
     select_system,
     get_basics
 )
-from vhsdecode.hifi.HiFiDecode import HiFiDecode, NoiseReduction
-from vhsdecode.hifi.TimeProgressBar import TimeProgressBar
+from hifidecode.hifi.HiFiDecode import HiFiDecode, NoiseReduction
+from hifidecode.hifi.TimeProgressBar import TimeProgressBar
 
 parser, _ = common_parser_cli("Extracts audio from raw VHS HiFi FM capture", default_threads=round(cpu_count() / 2) + 1)
 
diff --git a/setup.py b/setup.py
index dc957143..c29ca098 100755
--- a/setup.py
+++ b/setup.py
@@ -5,7 +5,7 @@ from Cython.Build import cythonize
 import numpy
 
 setup(
-    name='ld-decode',
+    name='hifi-decode',
     version='7',
 
     description='Software defined LaserDisc decoder',
@@ -20,28 +20,17 @@ setup(
         'Topic :: Multimedia :: Video :: Capture',
     ],
 
-    packages=['lddecode', 'vhsdecode', 'vhsdecode/addons', 'vhsdecode/hifi', 'vhsdecode/format_defs', 'cvbsdecode'],
+    packages=['hifidecode', 'hifidecode/addons', 'hifidecode/hifi', 'hifidecode/format_defs'],
     scripts=[
-        'cx-expander',
-        'ld-cut',
-        'ld-decode',
-        'scripts/ld-compress',
-        'vhs-decode',
-        'cvbs-decode',
         'hifi-decode',
-        'gen_chroma_vid.sh',
-        'gen_chroma_vid_pal.sh',
-        'gen_chroma_vid_palm.sh',
-        'gen_chroma_vid_ntsc.sh'
     ],
 
-    ext_modules=cythonize(['vhsdecode/*.pyx'], language_level=3),
+    ext_modules=cythonize(['hifidecode/*.pyx'], language_level=3),
     # Needed for using numpy in cython.
     include_dirs=[numpy.get_include()],
 
     # These are just the minimal runtime dependencies for the Python scripts --
     # see the documentation for the full list of dependencies.
-    provides=['lddecode'],
     requires=[
         'matplotlib',
         'numba',
diff --git a/vhsdecode/addons/chromaAFC.py b/vhsdecode/addons/chromaAFC.py
index 44feef4e..9d8d8c95 100644
--- a/vhsdecode/addons/chromaAFC.py
+++ b/vhsdecode/addons/chromaAFC.py
@@ -1,4 +1,4 @@
-from vhsdecode import utils
+from hifidecode import utils
 import numpy as np
 import scipy.signal as sps
 from scipy.fftpack import fft, fftfreq
diff --git a/vhsdecode/addons/chromasep.py b/vhsdecode/addons/chromasep.py
index de520787..65876a26 100644
--- a/vhsdecode/addons/chromasep.py
+++ b/vhsdecode/addons/chromasep.py
@@ -1,5 +1,5 @@
 from fractions import Fraction
-import vhsdecode.utils as utils
+import hifidecode.utils as utils
 import numpy as np
 from scipy import signal
 
diff --git a/vhsdecode/addons/resync.py b/vhsdecode/addons/resync.py
index ad8b7f0a..548fa6f5 100644
--- a/vhsdecode/addons/resync.py
+++ b/vhsdecode/addons/resync.py
@@ -1,7 +1,7 @@
 from collections import namedtuple
-from vhsdecode.addons.vsyncserration import VsyncSerration
+from hifidecode.addons.vsyncserration import VsyncSerration
 import numpy as np
-import vhsdecode.utils as utils
+import hifidecode.utils as utils
 import itertools
 from lddecode.utils import inrange
 import lddecode.core as ldd
@@ -519,7 +519,7 @@ class Resync:
         if self.use_serration:
             return self.getpulses_serration(field)
         else:
-            import vhsdecode.leveldetect
+            import hifidecode.leveldetect
 
             sync, blank = None, None
             if self.FieldState.hasLevels():
diff --git a/vhsdecode/addons/vsyncserration.py b/vhsdecode/addons/vsyncserration.py
index 410c6804..c396822c 100644
--- a/vhsdecode/addons/vsyncserration.py
+++ b/vhsdecode/addons/vsyncserration.py
@@ -2,7 +2,7 @@
 # locates them, and extracts the sync and blanking levels.
 # Also gives the base for level clamping, and maybe genlocking/vroom prevention
 
-from vhsdecode.utils import (
+from hifidecode.utils import (
     FiltersClass,
     firdes_lowpass,
     firdes_highpass,
diff --git a/vhsdecode/chroma.py b/vhsdecode/chroma.py
index 4060ef36..cda7087c 100644
--- a/vhsdecode/chroma.py
+++ b/vhsdecode/chroma.py
@@ -3,8 +3,8 @@ from collections import namedtuple
 import numpy as np
 import lddecode.utils as lddu
 import lddecode.core as ldd
-from vhsdecode.utils import get_line
-import vhsdecode.utils as utils
+from hifidecode.utils import get_line
+import hifidecode.utils as utils
 import scipy.signal as sps
 
 
diff --git a/vhsdecode/debug_plot.py b/vhsdecode/debug_plot.py
index c4a9a51d..224219b0 100644
--- a/vhsdecode/debug_plot.py
+++ b/vhsdecode/debug_plot.py
@@ -98,7 +98,7 @@ def plot_deemphasis(rf, filter_video_lpf, decoder_params, filter_deemp):
     import matplotlib.pyplot as plt
     import numpy as np
     import scipy.signal as sps
-    from vhsdecode.addons.FMdeemph import FMDeEmphasisB
+    from hifidecode.addons.FMdeemph import FMDeEmphasisB
 
     corner_freq = 1 / (math.pi * 2 * decoder_params["deemph_tau"])
 
diff --git a/vhsdecode/demod.py b/vhsdecode/demod.py
index 6cf00291..0aa04ed3 100644
--- a/vhsdecode/demod.py
+++ b/vhsdecode/demod.py
@@ -1,7 +1,7 @@
 from numba import njit
 import numpy as np
 
-import vhsdecode.hilbert as hilbert_test
+import hifidecode.hilbert as hilbert_test
 
 
 @njit(cache=True)
diff --git a/vhsdecode/doc.py b/vhsdecode/doc.py
index f07e0cc6..32200209 100644
--- a/vhsdecode/doc.py
+++ b/vhsdecode/doc.py
@@ -2,7 +2,7 @@ import numpy as np
 from numba import njit
 
 from lddecode.utils import inrange
-import vhsdecode.formats as vhs_formats
+import hifidecode.formats as vhs_formats
 
 
 @njit(cache=True)
diff --git a/vhsdecode/field.py b/vhsdecode/field.py
index 61c005d3..9762882d 100644
--- a/vhsdecode/field.py
+++ b/vhsdecode/field.py
@@ -5,11 +5,11 @@ import lddecode.core as ldd
 import lddecode.utils as lddu
 from lddecode.utils import inrange
 
-import vhsdecode.sync as sync
-import vhsdecode.formats as formats
-from vhsdecode.doc import detect_dropouts_rf
-from vhsdecode.addons.resync import Pulse
-from vhsdecode.chroma import (
+import hifidecode.sync as sync
+import hifidecode.formats as formats
+from hifidecode.doc import detect_dropouts_rf
+from hifidecode.addons.resync import Pulse
+from hifidecode.chroma import (
     decode_chroma_vhs,
     decode_chroma_betamax,
     decode_chroma_umatic,
diff --git a/vhsdecode/formats.py b/vhsdecode/formats.py
index a796c312..36e2cbb7 100644
--- a/vhsdecode/formats.py
+++ b/vhsdecode/formats.py
@@ -30,7 +30,7 @@ def get_format_params(system: str, tape_format: str, logger):
     # we need.
     if system == "PAL":
         if tape_format == "UMATIC":
-            from vhsdecode.format_defs.umatic import (
+            from hifidecode.format_defs.umatic import (
                 get_rfparams_pal_umatic,
                 get_sysparams_pal_umatic,
             )
@@ -39,7 +39,7 @@ def get_format_params(system: str, tape_format: str, logger):
                 RFParams_PAL
             )
         elif tape_format == "BETAMAX":
-            from vhsdecode.format_defs.betamax import (
+            from hifidecode.format_defs.betamax import (
                 get_rfparams_pal_betamax,
                 get_sysparams_pal_betamax,
             )
@@ -48,7 +48,7 @@ def get_format_params(system: str, tape_format: str, logger):
                 RFParams_PAL
             )
         elif tape_format == "SVHS":
-            from vhsdecode.format_defs.vhs import (
+            from hifidecode.format_defs.vhs import (
                 get_rfparams_pal_svhs,
                 get_sysparams_pal_svhs,
             )
@@ -57,7 +57,7 @@ def get_format_params(system: str, tape_format: str, logger):
                 RFParams_PAL
             )
         elif tape_format == "VIDEO8":
-            from vhsdecode.format_defs.video8 import (
+            from hifidecode.format_defs.video8 import (
                 get_rfparams_pal_video8,
                 get_sysparams_pal_video8,
             )
@@ -66,7 +66,7 @@ def get_format_params(system: str, tape_format: str, logger):
                 RFParams_PAL
             )
         elif tape_format == "HI8":
-            from vhsdecode.format_defs.video8 import (
+            from hifidecode.format_defs.video8 import (
                 get_rfparams_pal_hi8,
                 get_sysparams_pal_hi8,
             )
@@ -75,7 +75,7 @@ def get_format_params(system: str, tape_format: str, logger):
                 RFParams_PAL
             )
         else:
-            from vhsdecode.format_defs.vhs import (
+            from hifidecode.format_defs.vhs import (
                 get_rfparams_pal_vhs,
                 get_sysparams_pal_vhs,
             )
@@ -85,7 +85,7 @@ def get_format_params(system: str, tape_format: str, logger):
             )
     elif system == "NTSC":
         if tape_format == "UMATIC":
-            from vhsdecode.format_defs.umatic import (
+            from hifidecode.format_defs.umatic import (
                 get_rfparams_ntsc_umatic,
                 get_sysparams_ntsc_umatic,
             )
@@ -95,7 +95,7 @@ def get_format_params(system: str, tape_format: str, logger):
             )
 
         elif tape_format == "SVHS":
-            from vhsdecode.format_defs.vhs import (
+            from hifidecode.format_defs.vhs import (
                 get_rfparams_ntsc_svhs,
                 get_sysparams_ntsc_svhs,
             )
@@ -104,7 +104,7 @@ def get_format_params(system: str, tape_format: str, logger):
                 RFParams_NTSC
             )
         elif tape_format == "VIDEO8":
-            from vhsdecode.format_defs.video8 import (
+            from hifidecode.format_defs.video8 import (
                 get_rfparams_ntsc_video8,
                 get_sysparams_ntsc_video8,
             )
@@ -113,7 +113,7 @@ def get_format_params(system: str, tape_format: str, logger):
                 RFParams_NTSC
             )
         elif tape_format == "HI8":
-            from vhsdecode.format_defs.video8 import (
+            from hifidecode.format_defs.video8 import (
                 get_rfparams_ntsc_hi8,
                 get_sysparams_ntsc_hi8,
             )
@@ -122,7 +122,7 @@ def get_format_params(system: str, tape_format: str, logger):
                 RFParams_NTSC
             )
         else:
-            from vhsdecode.format_defs.vhs import (
+            from hifidecode.format_defs.vhs import (
                 get_rfparams_ntsc_vhs,
                 get_sysparams_ntsc_vhs,
             )
@@ -133,7 +133,7 @@ def get_format_params(system: str, tape_format: str, logger):
     elif system == "MPAL":
         if tape_format != "VHS":
             logger.warning('Tape format "%s" not supported for MPAL yet', tape_format)
-        from vhsdecode.format_defs.vhs import (
+        from hifidecode.format_defs.vhs import (
             get_rfparams_mpal_vhs,
             get_sysparams_mpal_vhs,
         )
diff --git a/vhsdecode/hifi/HiFiDecode.py b/vhsdecode/hifi/HiFiDecode.py
index a91e0526..f6ecc1a3 100644
--- a/vhsdecode/hifi/HiFiDecode.py
+++ b/vhsdecode/hifi/HiFiDecode.py
@@ -12,10 +12,10 @@ from scipy.signal import iirpeak, iirnotch
 from scipy.signal.signaltools import hilbert
 
 from lddecode.utils import unwrap_hilbert
-from vhsdecode.addons.FMdeemph import FMDeEmphasisC
-from vhsdecode.addons.chromasep import samplerate_resample
-from vhsdecode.addons.gnuradioZMQ import ZMQSend
-from vhsdecode.utils import firdes_lowpass, firdes_highpass, FiltersClass, gen_wave_at_frequency, StackableMA
+from hifidecode.addons.FMdeemph import FMDeEmphasisC
+from hifidecode.addons.chromasep import samplerate_resample
+from hifidecode.addons.gnuradioZMQ import ZMQSend
+from hifidecode.utils import firdes_lowpass, firdes_highpass, FiltersClass, gen_wave_at_frequency, StackableMA
 
 
 @dataclass
diff --git a/vhsdecode/main.py b/vhsdecode/main.py
index 88f4d81d..0209b27c 100644
--- a/vhsdecode/main.py
+++ b/vhsdecode/main.py
@@ -4,8 +4,8 @@ import traceback
 import argparse
 import lddecode.utils as lddu
 from lddecode.utils_logging import init_logging
-from vhsdecode.process import VHSDecode
-from vhsdecode.cmdcommons import (
+from hifidecode.process import VHSDecode
+from hifidecode.cmdcommons import (
     common_parser,
     select_sample_freq,
     select_system,
@@ -18,7 +18,7 @@ supported_tape_formats = {"VHS", "SVHS", "UMATIC", "BETAMAX", "VIDEO8", "HI8"}
 
 
 def main(use_gui=False):
-    import vhsdecode.formats as f
+    import hifidecode.formats as f
 
     parser, debug_group = common_parser(
         "Extracts video from raw VHS rf captures", use_gui=use_gui
@@ -267,7 +267,7 @@ def main(use_gui=False):
 
     debug_plot = None
     if args.debug_plot:
-        from vhsdecode.debug_plot import DebugPlot
+        from hifidecode.debug_plot import DebugPlot
 
         debug_plot = DebugPlot(args.debug_plot)
 
diff --git a/vhsdecode/process.py b/vhsdecode/process.py
index 2edbd2a3..fa5f2538 100644
--- a/vhsdecode/process.py
+++ b/vhsdecode/process.py
@@ -13,21 +13,21 @@ import pyximport; pyximport.install(language_level=3)  # noqa: E702
 import lddecode.core as ldd
 from lddecode.core import npfft
 import lddecode.utils as lddu
-import vhsdecode.utils as utils
-from vhsdecode.utils import StackableMA
-from vhsdecode.chroma import demod_chroma_filt
+import hifidecode.utils as utils
+from hifidecode.utils import StackableMA
+from hifidecode.chroma import demod_chroma_filt
 
-import vhsdecode.formats as vhs_formats
+import hifidecode.formats as vhs_formats
 
-# from vhsdecode.addons.FMdeemph import FMDeEmphasis
-from vhsdecode.addons.FMdeemph import FMDeEmphasisB
-from vhsdecode.addons.chromasep import ChromaSepClass
-from vhsdecode.addons.resync import Resync
-from vhsdecode.addons.chromaAFC import ChromaAFC
+# from hifidecode.addons.FMdeemph import FMDeEmphasis
+from hifidecode.addons.FMdeemph import FMDeEmphasisB
+from hifidecode.addons.chromasep import ChromaSepClass
+from hifidecode.addons.resync import Resync
+from hifidecode.addons.chromaAFC import ChromaAFC
 
-from vhsdecode.demod import replace_spikes, unwrap_hilbert, smooth_spikes
+from hifidecode.demod import replace_spikes, unwrap_hilbert, smooth_spikes
 
-from vhsdecode.field import field_class_from_formats
+from hifidecode.field import field_class_from_formats
 
 
 def parent_system(system):
@@ -619,7 +619,7 @@ class VHSRFDecode(ldd.RFDecode):
             )
 
         if self.debug_plot and self.debug_plot.is_plot_requested("deemphasis"):
-            from vhsdecode.debug_plot import plot_deemphasis
+            from hifidecode.debug_plot import plot_deemphasis
 
             plot_deemphasis(self, filter_video_lpf, DP, filter_deemp)
 
@@ -766,7 +766,7 @@ class VHSRFDecode(ldd.RFDecode):
         )
 
         if self.debug_plot and self.debug_plot.is_plot_requested("demodblock"):
-            from vhsdecode.debug_plot import plot_input_data
+            from hifidecode.debug_plot import plot_input_data
 
             plot_input_data(
                 raw_data=data,
-- 
2.38.0

